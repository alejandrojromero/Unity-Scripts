using UnityEngine;
using UnityEngine.AI;

public class PlayerController : MonoBehaviour
{
    public Camera cam;
    public NavMeshAgent agent;
    Material[] matArray;
    public Material highlight;
    public Material seeThru;
    public GameObject WayPoint;

    public Transform currentTarget;
    //public Transform[] targets;
    private int i = 0;

    public GameObject[] wayPoints;

    private void Start()
    {
        for (int i = 0; i < wayPoints.Length; i++){
            wayPoints[i].SetActive(false);
        }

        agent.SetDestination(wayPoints[i].transform.position);

    }
    // Update is called once per frame
    void Update()
    {
       

        if (Input.GetMouseButtonDown(0))
        {
            Ray ray = cam.ScreenPointToRay(Input.mousePosition);
            RaycastHit hit;
            matArray = agent.GetComponent<MeshRenderer>().materials;
            Vector3[] points = new Vector3[3];

            var dist = Vector3.Distance(wayPoints[i].transform.position, transform.position);
            currentTarget = wayPoints[i].transform;


            if (Physics.Raycast(ray, out hit) && hit.collider.gameObject.name != "Plane")
            {
                if (wayPoints[1].activeSelf == true && wayPoints[2].activeSelf == false)
                {
                    wayPoints[2].transform.position = hit.point;
                    wayPoints[2].SetActive(true);
                    points[2] = hit.point;

                }

                if (wayPoints[0].activeSelf == true && wayPoints[1].activeSelf == false)
                {
                    wayPoints[1].transform.position = hit.point;
                    wayPoints[1].SetActive(true);
                    points[1] = hit.point;

                }


                if (dist < 0.1f)
                {
                    if (i < wayPoints.Length - 1)
                    { //negate targets[0], since it's already set in destination.
                        i++; //change next target
                        agent.SetDestination(currentTarget.position);
                    }
                }


                if (wayPoints[0].activeSelf == false)
                {
                    wayPoints[0].transform.position = hit.point;
                    wayPoints[0].SetActive(true);
                }


                matArray[1] = seeThru;

                agent.SetDestination(currentTarget.position);


                /*
                for (int i = 0; i < wayPoints.Length; i++)
                {
                    if (i != 0 && wayPoints[i-1].activeSelf == true)
                    {
                        wayPoints[i].SetActive(true);
                        wayPoints[i].transform.position = hit.point;
                        points[i] = hit.point;
                    }
                    if (i == 0)
                    {
                        wayPoints[i].SetActive(true);
                        wayPoints[i].transform.position = hit.point;
                        points[i] = hit.point;
                    }
                }
                */

                /*

                if (wayPoints[1].activeSelf == true)
                {
                    wayPoints[2].SetActive(true);
                    wayPoints[2].transform.position = hit.point;
                    points[2] = hit.point;

                }

                if (wayPoints[0].activeSelf == true)
                {
                    wayPoints[1].SetActive(true);
                    wayPoints[1].transform.position = hit.point;
                    points[1] = hit.point;

                }
                else
                {
                    wayPoints[0].SetActive(true);
                    wayPoints[0].transform.position = hit.point;
                    points[0] = hit.point;
                }
                */

                //Move player


            }

            if (hit.collider.gameObject.name == "Plane")
            {
                matArray[1] = highlight;
                agent.GetComponent<MeshRenderer>().materials = matArray;
            }
            agent.GetComponent<MeshRenderer>().materials = matArray;



        }



        if (WayPoint.transform.position.x == agent.transform.position.x)
        {
            for (int i = 0; i < wayPoints.Length; i++)
            {
                WayPoint.SetActive(false);
                agent.SetDestination(WayPoint.transform.position);
                WayPoint = wayPoints[i];
            }

        }



    }
}
